{"version":3,"sources":["lib/videos/Video Of People Walking.mp4","lib/functions.js","components/map/ContentForm.js","components/map/MyMarker.js","components/map/Map.js","api_key.js","components/Navside.js","components/feed/Post.js","components/feed/Feed.js","components/community/Following.js","components/community/Community.js","components/Profile.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","require","fetchRequest","methodType","url","func","arguments","length","undefined","console","log","body","fetch","then","response","json","data","catch","err","error","method","JSON","stringify","headers","content-type","ContentForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onDateChange","e","target","value","setState","date","onTextChange","text","onImgChange","files","image","onSubmit","props","_this$state","state","place","newPost","place_id","_id","place_name","name","lat_lng","position","date_visited","concat","userInfo","setTimeout","onCloseFormInfoWindow","onUpdateApp","alert","react_default","a","createElement","className","type","min","max","onChange","required","placeholder","onClick","Component","MyMarker","animation","prevProps","map","pos","renderMyMarker","_this$props","google","setMarkerState","ref","maps","Animation","BOUNCE","marker","Marker","setMap","baseUserId","serverKey","MapContainer","onMapClick","isMapStyleActive","isToolsActive","clickedMarker","selectedPlace","isFormWindowOpen","isAddressShown","hoverMarker","hoverPlace","isHoverWindowOpen","isNewPlaceWindow","newMarker","newPlace","google_id","address","onAddNewMarker","mapProps","latLng","userId","places","onAddPlace","event","onShowFormWindow","onShowPlaceDetails","onSetMarkerState","onToggleMyTools","onToggleMyPlaces","isPlacesActive","onToggleOtherPlaces","isOtherPlacesActive","onToggleMapStyleWindow","onSelectMapStyle","n","mapStyle","onToggleAddress","otherPlaces","_this2","renderAutoComplete","_this$props$userInfo","current_center","prevState","_this3","_this$props$userInfo2","_this4","autocomplete","Autocomplete","locationInput","bindTo","addListener","getPlace","_place$geometry","geometry","viewport","location","fitBounds","setCenter","setZoom","formatted_address","_this5","_this6","_this$state2","button","ReactDOM","render","React","Children","only","document","getElementById","contentForm","ContentForm_ContentForm","assign","anchor","href","onHover","_this7","index","dist","key","user_id","DROP","avatar","onMouseover","_this8","_this$state3","containerStyle","height","center","centerAroundCurrentLocation","zoom","disableDefaultUI","zoomControl","styles","mapsCustom","renderSearchBox","renderAllMarkers","onClose","visible","onOpen","renderInfoWindowReactElement","id","src","alt","MyMarker_MyMarker","GoogleApiWrapper","apiKey","libraries","Map_MapContainer","Navside","active","onActive","pathname","Link","to","renderAvatar","withRouter","Post","t","first_name","last_name","_this$props$content","content","timestamp","moment","format","startOf","fromNow","Feed","myContentsJSX","contents","sort","reverse","Post_Post","otherPlacesID","followings","filter","includes","b","renderContentList","Following","onGetOtherPlaces","findIndex","person","_this$props$person","status","Community","Following_Following","renderFollowings","objectSpread","Profile","LandingPage","video","autoPlay","loop","userUrl","App","action","toConsumableArray","allContents","forEach","user","BrowserRouter","Route","path","exact","Redirect","component","Feed_Feed","Community_Community","Profile_Profile","components_Navside","Map","Boolean","window","hostname","match","src_App"],"mappings":"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","file":"static/js/main.6770ce2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Video Of People Walking.a935acdb.mp4\";","// get me some libs\nimport moment from 'moment';\nconst numeral = require('numeral');\n\n\n// function to convert numbers\n// 1000 -> 1k && 1100 -> 1.1k and so on\n\n// abbreviate all nums in an array\nexport function abbreviateAllNumsInArr(arr) {\n    arr.forEach(obj => {\n        abbreviateAllNumsInObj(obj);\n    })\n}\n\n// abbreviate all nums in an obj\nexport function abbreviateAllNumsInObj(obj, exception) {\n    for (let prop in obj) {\n        if (prop === exception) {\n            obj[prop] = numeral(obj[prop]).format('0,0');\n        }\n        if (typeof obj[prop] == 'number') {\n            obj[prop] = abbreviateNum(obj[prop]);\n        }\n    }\n}\n\n// abbreviate nums individually\nexport function abbreviateNum(num) {\n    if ((num >= 1000 && num < 1100) || (num >= 10000 && num < 10100) || (num >= 100000 && num < 100100) || (num >= 1000000 && num < 1100000) || (num >= 10000000 && num < 10100000)){\n        return numeral(num).format('0a');\n    } else if (num < 1000) {\n        return num;\n    }\n    return numeral(num).format('0.0a')\n}\n\n// fetch request\nexport function fetchRequest(methodType, url, func = console.log, body = null) {\n    if (methodType === 'GET') {\n        fetch(url)\n        .then(response => response.json())\n        .then(data => {func(data);\n        }).catch(err => console.error('YOU GOT AN ERROR: ', err))\n    } else if (methodType === 'POST') {\n        // debugger;\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        })\n        .then(response => response.json())\n        .then(data => {func(data);\n        }).catch(err => console.error('YOU GOT AN ERROR: ', err))\n    } else if (methodType === 'DELETE') {\n        fetch(url, {\n            method: 'DELETE'\n        })\n        .then(response => response.json())\n        .then(data => {func(data);\n        }).catch(err => console.error('YOU GOT AN ERROR: ', err))\n    } else if (methodType === 'PUT') {\n        fetch(url, {\n            method: 'PUT'\n        })\n        .then(response => response.json())\n        .then(data => {func(data);\n        }).catch(err => console.error('YOU GOT AN ERROR: ', err))\n    }\n}\n\n// convert timestamp to relative time\nexport function convertToRelativeTime(timestamp) {\n    let t = moment(timestamp).format()\n    return moment(t).startOf('minutes').fromNow()\n}\n\nexport function convertToDate(t) {\n    return moment(t).format('dddd, MMM Do YYYY');\n}","import React, { Component } from 'react';\nimport * as func from '../../lib/functions';\n\nexport default class ContentForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            text: '',\n            image: '',\n            date: ''\n        }\n    }\n    onDateChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            date: e.target.value\n        })\n    }\n    onTextChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            text: e.target.value\n        })\n    }\n    onImgChange = (e) => {\n        console.log(e.target.files[0])\n        this.setState({\n            image: e.target.files[0]\n        })\n    }\n\n    onSubmit = (props, e) => {\n        const {text,image,date} = this.state;\n        if (text && date) {\n            const place = this.props.place;\n            const newPost = {\n                place_id: place._id,\n                place_name: place.name,\n                text: text,\n                lat_lng: place.position,\n                image: image,\n                date_visited: date\n            }\n            console.log(newPost)\n            const contentUrl = `${this.props.userInfo._id}/contents?api_key=edward`\n            func.fetchRequest('POST', contentUrl, (data) => {\n                console.log('Reponse: ', data);\n                setTimeout(()=> {\n                    this.props.onCloseFormInfoWindow();\n                    // method to update app state\n                    this.props.onUpdateApp();  \n                }, 250)\n            }, newPost)\n        } else {\n            alert('Please provide valid inputs')\n        }\n    }\n\n    render() {\n        return (\n            <form className='content-form'>\n                <h2>Share your experience!</h2>\n                <h3>Place: {this.props.place ? this.props.place.name : ''}</h3>\n                <label className='content-form__date'>\n                    When was your trip?\n                    <input \n                        type='date'\n                        name=\"trip-date\" \n                        min=\"2015-01-01\" max=\"2018-12-31\"\n                        value={this.state.date}\n                        onChange={this.onDateChange}\n                        required\n                    />\n                </label>\n                <label className='content-form__post'>\n                    <textarea \n                    placeholder={`Write something about this place...`}\n                    onChange={this.onTextChange}\n                    required\n                    ></textarea>\n                </label>\n                <div className='content-form__buttons'>\n                    <div className='content-form__buttons-left'>\n                        <i className=\"material-icons\">tag_faces</i>\n                        <label>\n                            <i className=\"material-icons file\">attach_file<input type='file' className='file-input' onChange={this.onImgChange} /></i>\n                        </label>\n                        <i className=\"material-icons gif\">gif</i>\n                        <i className=\"material-icons\">face</i>\n                    </div>\n                    <input type='button' value='Submit' onClick={this.onSubmit}/>\n                </div>\n            </form>\n        )\n    }\n}","import { Component } from 'react';\n\n\nexport default class MyMarker extends Component {\n    state = {\n        animation: ''\n    }\n    \n    componentDidUpdate(prevProps) {\n        if ((this.props.map !== prevProps.map) ||\n            (this.props.pos !== prevProps.pos)) {\n            this.renderMyMarker();\n        }\n    }\n\n    renderMyMarker() {\n        const { map, google, setMarkerState, pos } = this.props;\n        // debugger;\n        let bounce = '';\n        if (pos) {\n            bounce = google.maps.Animation.BOUNCE\n        } else {\n            bounce = null\n        }\n        const ref = {\n            map: map,\n            position: pos,\n            animation: bounce\n        };\n        this.marker = new google.maps.Marker(ref);\n        setMarkerState(this.marker)\n        if (!pos) {\n            this.marker.setMap(null)\n        }\n    }\n\n    render() {\n        return null\n    }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ContentForm from './ContentForm';\nimport MyMarker from './MyMarker';\n\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport { places_key, places_key2, server_key } from '../../api_key';\nimport * as func from '../../lib/functions';\nimport mapsCustom from '../../styles/map-styles/custom.json';\n\n// const baseURL = 'http://localhost:8080';\nconst baseUserId = '5c095088f174490551984d6b'\nconst serverKey = `?api_key=${server_key}`;\n\nclass MapContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            position: null,\n\n            isToolsActive: false,\n            isPlacesActive: false,\n            places: [],\n            userId: '',\n            isAddressShown: false,\n\n            otherPlaces: [],\n            isOtherPlacesActive: true,\n\n            // clicked marker\n            clickedMarker: {},\n            selectedPlace: null,\n            isFormWindowOpen: false,\n\n            // mouseover marker\n            hoverMarker: {},\n            hoverPlace: null,\n            isHoverWindowOpen: false,\n\n            // autocomplete place marker/info\n            isNewPlaceWindow: false,\n            newMarker: null,\n            newPlace: {\n                lat_lng: null,\n                google_id: '',\n                address: '',\n                name: ''\n            },\n        }\n    }\n\n    componentDidMount() {\n        this.renderAutoComplete();\n        // console.log(this.props.userInfo)\n        const { current_center, _id: userId } = this.props.userInfo;\n        func.fetchRequest('GET', `${baseUserId}/places${serverKey}`, (data) => {\n            // console.log(data)\n            this.setState({\n                places: data,\n                isPlacesActive: true,\n                position: current_center,\n                userId: userId,\n            });\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props !== prevProps.map) this.renderAutoComplete();\n\n        \n        if (!this.state.position && this.props.userInfo) {\n            const { current_center, _id: userId } = this.props.userInfo;\n            if (this.props.userInfo !== prevState.userInfo) {\n                const placesUrl = `${baseUserId}/places${serverKey}`;\n                func.fetchRequest('GET', placesUrl, (data) => {\n                    this.setState({\n                        places: data,\n                        position: current_center,\n                        userId: userId\n                    });\n                });\n            }\n        }\n\n        if (this.state.otherPlaces !== this.props.otherPlaces) {\n            this.setState({\n                otherPlaces: this.props.otherPlaces\n            })\n        }\n    }\n\n    renderAutoComplete() {\n        const { google, map } = this.props;\n\n        // if undefined, return\n        if (!google || !map) return;\n\n        // instantiate google autocomplete service in location input\n        const autocomplete = new google.maps.places.Autocomplete(this.locationInput);\n        autocomplete.bindTo('bounds', map)\n\n        autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n            const { viewport, location } = place.geometry;\n\n            if (!place.geometry) return;\n            // if geometry is found within viewport, display location\n            if (viewport) {\n                map.fitBounds(viewport);\n                map.setCenter(location);\n                map.setZoom(17)\n                // if geometry is found but not within viewport, set location in center of vport\n            } else {\n                map.setCenter(location);\n                map.setZoom(17)\n            }\n            // set new location as state\n            this.onMapClick()\n            this.setState({\n                position: location,\n                isNewPlaceWindow: true,\n                newPlace: {\n                    lat_lng: location,\n                    google_id: place.place_id,\n                    name: place.name,\n                    address: place.formatted_address,\n                }\n            })\n            this.locationInput.value = ''\n        })\n    }\n\n    renderSearchBox() {\n        return <form className='search'>\n            <input\n                className='search-input'\n                placeholder='Enter a location'\n                ref={ref => (this.locationInput = ref)}\n                type='text'\n                name='location-input'\n            />\n            <button className='search-button' type='button'><i className=\"material-icons\">search</i></button>\n        </form>\n    }\n\n    // handler when map is clicked\n    onMapClick = () => {\n        this.setState({\n            isMapStyleActive: false,\n            isToolsActive: false,\n            clickedMarker: {},\n            selectedPlace: null,\n            isFormWindowOpen: false,\n            isAddressShown: false,\n\n            hoverMarker: {},\n            hoverPlace: null,\n            isHoverWindowOpen: false,\n\n            isNewPlaceWindow: false,\n            newMarker: null,\n            newPlace: {\n                lat_lng: null,\n                google_id: '',\n                address: '',\n                name: ''\n            }\n        })\n    }\n\n    // handler that adds new marker when map is clicked\n    onAddNewMarker = (mapProps, props, e) => {\n        let latLng = e.latLng;\n        const placesUrl = `${this.state.userId}/places${serverKey}`;\n        func.fetchRequest('POST', placesUrl, (data) => {\n            this.setState({\n                places: data\n            })\n        }, latLng)\n    }\n\n    // control function for content form that sends post request \n    onAddPlace = (event) => {\n        const { places, userId, newPlace } = this.state\n        console.log('Adding place.....', newPlace);\n        func.fetchRequest('POST', `${baseUserId}/places${serverKey}`, (data) => {\n            console.log(data)\n            this.setState({\n                places: places.concat(data),\n                isNewPlaceWindow: false,\n                newMarker: null,\n                newPlace: {\n                    lat_lng: null,\n                    google_id: '',\n                    address: '',\n                    name: ''\n                }\n            })\n        }, newPlace)\n    }\n\n    // handler to show form info window when pinned marker is clicked\n    onShowFormWindow = (props, marker) => {\n        this.setState({\n            isHoverWindowOpen: false,\n            hoverMarker: {},\n            hoverPlace: null,\n        })\n\n        setTimeout(() => {\n            this.setState({\n                clickedMarker: marker,\n                selectedPlace: props,\n                position: props.position,\n                isFormWindowOpen: true\n            })\n        }, 250)\n    }\n\n    // mouseover handler - renders infowindow with place details\n    onShowPlaceDetails = (props, marker) => {\n        setTimeout(() => {\n            this.setState({\n                hoverMarker: marker,\n                hoverPlace: props,\n                isHoverWindowOpen: true\n            })\n        }, 250)\n    }\n\n    // function to set new myMarker in state to render pin-infowindow\n    onSetMarkerState = (marker) => {\n        // console.log('onSetMarkerState ran')\n        this.setState({\n            newMarker: marker\n        })\n    }\n\n    onToggleMyTools = () => {\n        this.setState({\n            isToolsActive: !this.state.isToolsActive,\n            isMapStyleActive: false,\n        })\n    }\n    \n    onToggleMyPlaces = () => { this.setState({ isPlacesActive: !this.state.isPlacesActive }) }\n    onToggleOtherPlaces = () => { this.setState({ isOtherPlacesActive: !this.state.isOtherPlacesActive }) }\n    onToggleMapStyleWindow = () => { this.setState({ isMapStyleActive: !this.state.isMapStyleActive }) }\n\n    onSelectMapStyle = (n) => {\n        console.log('select map clicked');\n        this.setState({\n            mapStyle: n,\n            isMapStyleActive: false,\n            isToolsActive: false\n        })\n    }\n\n    onToggleAddress = () => {\n        console.log('toggle address....')\n        if (!this.state.isAddressShown) {\n            this.setState({isAddressShown: true})\n        } else {\n            this.setState({isAddressShown: false})\n        }\n    }\n\n    // handler that renders the button on the infowindow\n    renderInfoWindowReactElement(props, e) {\n        const { newMarker, isNewPlaceWindow, selectedPlace, isFormWindowOpen, hoverPlace, isHoverWindowOpen, isAddressShown } = this.state\n        if (newMarker && isNewPlaceWindow) {\n            const button = (\n                <button onClick={e => this.onAddPlace()}>Pin this place!</button>\n            );\n            ReactDOM.render(React.Children.only(button), document.getElementById(\"pin-button\"));\n        } else if (selectedPlace && isFormWindowOpen) {\n            const contentForm = (\n                <ContentForm place={this.state.selectedPlace} {...props} onCloseFormInfoWindow={this.onMapClick} />\n            )\n            ReactDOM.render(React.Children.only(contentForm), document.getElementById(\"content-form\"));\n        } else if (hoverPlace && isHoverWindowOpen) {\n            const anchor = (\n                <div className='address-link' href='' onClick={this.onToggleAddress}>{isAddressShown ? 'Hide Address' : 'Show Address'}</div>\n            )\n            ReactDOM.render(React.Children.only(anchor), document.getElementById(\"show-address\"));\n        }\n    }\n\n    renderAllMarkers(props, places, onClick, onHover) {\n        const markerJSX = places.map((place, index) => {\n            return <Marker\n                key={index}\n                _id={place._id}\n                user_id={place.user_id}\n                google_id={place.google_id}\n                name={place.name}\n                address={place.address}\n                position={place.lat_lng}\n                animation={props.maps.Animation.DROP}\n                image={place.user_id.avatar}\n                onMouseover={!this.state.selectedPlace ? onHover : null}\n                onClick={onClick}\n            >\n            </Marker>\n        })\n        return markerJSX\n    }\n\n    render() {\n        const { position, newPlace, newMarker, isNewPlaceWindow, clickedMarker,\n            hoverMarker, hoverPlace, isHoverWindowOpen, isFormWindowOpen, places,\n            otherPlaces, isPlacesActive, isOtherPlacesActive, isToolsActive, isMapStyleActive, isAddressShown} = this.state\n        const { google } = this.props\n        return (\n            <div className='mapContainer'>\n                <Map google={this.props.google}\n                    containerStyle={{\n                        height: '100vh',\n                        position: 'relative',\n                    }}\n                    center={position}\n                    centerAroundCurrentLocation={false}\n                    zoom={13}\n                    disableDefaultUI={true}\n                    zoomControl={true}\n                    styles={mapsCustom}\n                    onClick={this.onMapClick}\n                >\n                    {/* render searchbox */}\n                    {this.renderSearchBox()}\n\n                    {/* render markers */}\n                    {isPlacesActive && places.length > 0 ? this.renderAllMarkers(google, places, this.onShowFormWindow, this.onShowPlaceDetails) : null}\n\n                    {/* render all other markers */}\n                    {isOtherPlacesActive && otherPlaces.length > 0 ? this.renderAllMarkers(google, otherPlaces, this.onShowFormWindow, this.onShowPlaceDetails) : null}\n\n                    {/* render content form window */}\n                    <InfoWindow\n                        marker={clickedMarker}\n                        onClose={this.onMapClick}\n                        visible={isFormWindowOpen}\n                        onOpen={e => { this.renderInfoWindowReactElement(this.props, e) }}\n                    >\n                        <div id='content-form' />\n                    </InfoWindow>\n\n                    {/* on mouseover show place name */}\n                    <InfoWindow\n                        marker={hoverMarker}\n                        onClose={this.onMapClick}\n                        visible={isHoverWindowOpen}\n                        onOpen={ e => { this.renderInfoWindowReactElement(this.props, e) } }\n                    >\n                        <div className='pinned-place'>\n                            <img className='avatar' src={hoverPlace ? hoverPlace.user_id.avatar : null} alt='avatar' />\n                            <p id='pinned'>Pinned!</p>\n                            <h4>{hoverPlace ? hoverPlace.name : ''}</h4>\n                            <div id='show-address' />\n                            <div className={`pinned-address ${isAddressShown ? 'active' : ''}`}>{hoverPlace ? hoverPlace.address : ''}</div>\n                        </div>\n                    </InfoWindow>\n\n                    {/* render searched marker & info window */}\n                    <MyMarker\n                        pos={newPlace.lat_lng}\n                        setMarkerState={this.onSetMarkerState}\n                    />\n                    <InfoWindow\n                        marker={newMarker}\n                        visible={isNewPlaceWindow}\n                        onClose={this.onMapClick}\n                        onOpen={e => { this.renderInfoWindowReactElement(this.props, e) }}\n                    >\n                        <div className='new-place'>\n                            <p>You found</p>\n                            <h4>{newPlace.name}</h4>\n                            <div id=\"pin-button\" />\n                        </div>\n                    </InfoWindow>\n                </Map>\n                {/* LOGO */}\n                <div className='logo'>\n                    <i className=\"material-icons\">add_location</i>\n                    <h1>MapSocial</h1>\n                </div>\n                {/* Map tools */}\n                <div className='tools'>\n                    <i className=\"material-icons\" onClick={this.onToggleMyTools}>expand_more</i>\n                    <div className={`tools-list ${isToolsActive ? 'active' : 'inactive'}`}>\n                        <div onClick={this.onToggleMyPlaces}>Toggle My Markers</div>\n                        <div onClick={this.onToggleOtherPlaces}>Toggle Other Markers</div>\n                        <div onClick={this.onToggleMapStyleWindow}>Change Map Style</div>\n                        <div onClick={() => this.onSelectMapStyle('custom')} className={`map-styles ${isMapStyleActive ? 'map-active' : 'map-inactive'}`}>Custom</div>\n                        <div onClick={() => this.onSelectMapStyle('retro')} className={`map-styles ${isMapStyleActive ? 'map-active' : 'map-inactive'}`}>Retro</div>\n                        <div onClick={() => this.onSelectMapStyle('night')} className={`map-styles ${isMapStyleActive ? 'map-active' : 'map-inactive'}`}>Dark</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst MapWrapper = props => (\n    <Map className=\"map\" google={props.google} visible={true}>\n        <MapContainer {...props} />\n    </Map>\n);\n\n// export default MapWrapper\nexport default GoogleApiWrapper({\n    apiKey: places_key,\n    libraries: ['places'],\n})(MapWrapper)","export var places_key = 'AIzaSyBEnk3BmbKglT82XM24YbJovRMDnEvqsUY';\nexport var server_key = 'edward';","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'\n\nclass Navside extends Component {\n    state = {\n        active: 'map'\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location !== this.props.location) {\n            const { pathname } = this.props.location;\n            if ( pathname === '/') this.setState({active: '/'})\n            else if ( pathname === '/map/profile' ) this.setState({active: 'profile'})\n            else if ( pathname === '/map/community' ) this.setState({active: 'community'})\n            else if ( pathname === '/map/social/all' ) this.setState({active: 'social'})\n            else if ( pathname === '/map' ) this.setState({active: 'map'});\n        }\n    }\n\n    renderAvatar() {\n        return <img className={`top-avatar ${this.state.active === 'profile' ? 'active' : null}`} src={this.props.avatar} alt=\"Avatar\" />\n    }\n\n    onActive = (active) => {\n        if (active === this.state.active) {\n            return 'active'\n        } else {\n            return ''\n        }\n    }\n\n    render () {\n        return (\n            <nav>\n                <div className='top'>\n                    <Link to='/opening'>\n                        <i className={`material-icons top-home ${this.onActive('opening')}`}>home</i>\n                    </Link>\n                    <Link to='/map/profile'> \n                        { this.props.avatar ? this.renderAvatar() : <i className={`material-icons ${this.onActive('profile')}`}>person</i>}\n                    </Link>\n                    <Link to='/map/community'>\n                        <i className={`material-icons top-community ${this.onActive('community')}`}>group</i>\n                    </Link>\n                    <Link to='/map/social/all'>\n                        <i className={`material-icons top-feed ${this.onActive('social')}`}>chat</i>\n                    </Link>\n                    <Link to='/map'>\n                        <i className={`material-icons top-pin ${this.onActive('map')}`}>place</i>\n                    </Link>\n                </div>\n                <div className='bottom'>\n                    <i className=\"material-icons\">help_outline</i>\n                    <i className=\"material-icons\">settings</i>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default withRouter(Navside);","import React, { Component } from 'react';\nimport * as func from '../../lib/functions';\n\n\n\nexport default class Post extends Component {\n    render() {\n        const { first_name, last_name, avatar } = this.props.userInfo;\n        const { timestamp, text, image, /* likes, comments, */ _id, place_name, date_visited: date } = this.props.content;\n        return (\n            <div id={_id} className='content'>\n                <div className='content-info'>\n                    <div className='content-info__avatar'>\n                        <img src={avatar} alt=\"avatar\"/>\n                    </div>\n                    <div className='content-info__details'>\n                        <h4>{`${first_name} ${last_name}`}</h4>\n                        <p>{func.convertToRelativeTime(timestamp)}</p>\n                    </div>\n                </div>\n                <div className='content-box'>\n                    <h3>{place_name}</h3>\n                    <p className='content-box__date'>Visited: {func.convertToDate(date)}</p>\n                    <p className='content-box__text'>{text}</p>\n                    {image ? <img src={image} alt='content' /> : null}\n                </div>\n                <div className='content-reaction'>\n                    <button className='content-reaction__btns'>\n                        <i className=\"material-icons\">thumb_up</i><span>Like</span>\n                    </button>\n                    <button className='content-reaction__btns'>\n                        <i className=\"material-icons\">add_comment</i><span>Comment</span>\n                    </button>\n                    <button className='content-reaction__btns'>\n                        <i className=\"material-icons\">reply</i><span>Share</span>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Post from './Post';\n\nexport default class Feed extends Component {\n    state = {\n        active: ''\n    }\n\n    componentDidMount() {\n        const { pathname } = this.props.location;\n        if (pathname === '/map/social/all') {\n            this.setState({ active: 'all' })\n        } else {\n            this.setState({ active: 'personal' })\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location !== this.props.location) {\n            const { pathname } = this.props.location;\n            if (pathname === '/map/social/all') {\n                this.setState({ active: 'all' })\n            } else {\n                this.setState({ active: 'personal' })\n            }\n        }\n    }\n\n    onActive = (active) => {\n        if (active === this.state.active) {\n            return 'active'\n        } else {\n            return ''\n        }\n    }\n\n    renderContentList() {\n        const { pathname } = this.props.location;\n        const { userInfo, otherPlaces } = this.props\n        const myContentsJSX = userInfo.contents.sort().reverse().map((content, index) => {\n            return <Post content={content} userInfo={userInfo} key={index} />\n        })\n        if (pathname === '/map/social/all') {\n            const otherPlacesID = otherPlaces.map(place => place._id)\n            const allContentsJSX = userInfo.followings.map(followings => {\n                return followings.contents\n                    .filter(content => otherPlacesID.includes(content.place_id))\n                    .map((content, index) => {\n                        return <Post content={content} userInfo={followings} key={index} />\n                    })\n            })\n            return allContentsJSX.concat(myContentsJSX).sort((a, b) => {\n                return a.timestamp - b.timestamp\n            })\n        }\n        return myContentsJSX\n    }\n\n    render() {\n        return (\n            <section className='toggle-container'>\n                <div className='feed'>\n                    <div className=\"feed-header\">\n                        <div className='feed-header__title'>\n                            <h1>Social Feed</h1>\n                        </div>\n                        <div className='feed-header__filter'>\n                            <Link to='/map/social/all'>\n                                <div className={this.onActive('all')}>View All Posts</div>\n                            </Link>\n                            <Link to='/map/social'>\n                                <div className={this.onActive('personal')}>View My Posts</div>\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"feed-list\">\n                        {this.props.userInfo.contents ? this.renderContentList() : null}\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\n\nexport default class Following extends Component {\n    state = {\n        active: false,\n    }\n\n    componentDidMount() {\n        const index = this.props.otherPlaces.findIndex(place => {\n            return place.user_id._id === this.props.person._id\n            })\n        if (index !== -1) {\n            this.setState({active: true})\n        }\n    }\n\n    onClick = (id) => {\n        if (!this.state.active) {\n            this.props.onGetOtherPlaces(id, 'add');\n            this.setState({\n                active: true\n            })\n        } else {\n            this.props.onGetOtherPlaces(id, 'remove')\n            this.setState({\n                active: false\n            })\n        }\n    }\n\n    render() {\n        const { _id, avatar, first_name, last_name, status } = this.props.person\n        const { active } = this.state;\n        return (\n            <div id={_id} className='following'>\n                <div className='following-left'>\n                    {avatar ?  <img src={avatar} alt=\"avatar\"/> : <i className=\"material-icons\">person</i>}\n                    <div className='following-left__info'>\n                        <h4>{`${first_name} ${last_name}`}</h4>\n                        <p>\"{status}\"</p>\n                    </div>\n                </div>\n                <div className='following-right'>\n                    <button onClick={() => this.onClick(_id)} type='button' name='view-profile-btn' className={`view-profile ${active ? 'active' : ''}`}>{active ? 'Disable' : 'View Map'}</button>\n                    <button type='button' name='unfollow-btn' className='unfollow'>Unfollow</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport Following from './Following';\n\nexport default class Community extends Component {\n    state = {\n        followings: []\n    }\n\n    renderFollowings(person, index, props) {\n        return <Following {...props} person={person} key={index} />\n    }\n\n    render() {\n        return (\n            <section className='toggle-container'>\n                <div className='community'>\n                    <div className='community-header'>\n                        <h1>Community</h1>\n                    </div>\n                    <div className='community-list'>\n                        {this.props.followings ? this.props.followings.map((person, index) => \n                        this.renderFollowings(person, index, {...this.props})) : null}\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\n\nexport default class Profile extends Component {\n    render() {\n        const { userInfo } = this.props\n        return (\n            <section className='toggle-container'>\n                <div className='profile'>\n                    <h1>My Profile</h1>\n                    <div className='profile-details'>\n                        <h3>First Name: <span>{userInfo.first_name}</span></h3>\n                        <h3>Last Name: <span>{userInfo.last_name}</span></h3>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport video from '../lib/videos/Video Of People Walking.mp4';\n\nexport default class LandingPage extends Component {\n    shouldComponentUpdate() {\n        return false\n    }\n\n    render() {\n        return (\n            <section className='landing-page'>\n                <video\n                    src={video}\n                    autoPlay\n                    loop\n                >\n                </video>\n                <div className='welcome'>\n                    <div className='welcome-modal'>\n                        <h1 className='title'><i className=\"material-icons\">add_location</i>MapSocial</h1>\n                        <h3 className='tag'>Your guide to find and share new experiences.</h3>\n                        <Link to='/map'>\n                            <button>Start Adventuring</button>\n                        </Link>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './styles/App.css';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Map from './components/map/Map';\nimport Navside from './components/Navside';\nimport Feed from './components/feed/Feed';\nimport Community from './components/community/Community';\nimport Profile from './components/Profile';\nimport { server_key } from './api_key';\nimport * as func from './lib/functions';\nimport LandingPage from './components/LandingPage';\n\n// const baseURL = 'http://localhost:8080';\nconst serverKey = `?api_key=${server_key}`;\nconst userId = '5c095088f174490551984d6b'; /* ed */\n\nconst userUrl = `/${userId}${serverKey}`;\n\nclass App extends Component {\n    state = {\n        userInfo: {},\n        otherPlaces: [],\n        contents: []\n    }\n\n    componentDidMount() {\n        console.log('App did mount')\n        func.fetchRequest('GET', userUrl, (data) => {\n            // console.log(data);\n            let allContents = [];\n            data.followings.forEach(user => allContents.concat(user.contents));\n            this.setState({\n                userInfo: data,\n                contents: allContents.concat(data.contents)\n            });\n        });\n    }\n\n    onUpdateApp = () => {\n        func.fetchRequest('GET', userUrl, (data) => {\n            this.setState({\n                userInfo: data\n            });\n        });\n    }\n\n    // get places on click --> linked from following component\n    // if action === 'add' - send get request to the server to retrieved all places of user\n    // otherwise, filter otherplaces and remove places w/ specified user id\n    onGetOtherPlaces = (userId, action) => {\n        // console.log('Calling other places')\n        const { otherPlaces } = this.state;\n        if (action === 'add') {\n            func.fetchRequest('GET', `/${userId}/places${serverKey}`, (data) => {\n                // console.log(data);\n                this.setState({\n                    otherPlaces: [...otherPlaces].concat(data)\n                });\n            });\n        } else {\n            this.setState({\n                otherPlaces: [...otherPlaces].filter(place => place.user_id._id !== userId)\n            })\n        }\n    }\n\n    render() {\n        // console.log(this.state.contents)\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Route path='/' exact render={()=> <Redirect to='/opening' />} />\n                    <Route path='/opening' exact component={LandingPage}></Route>\n                    <Route path='/map/social' render={(props) => \n                        <Feed {...props} userInfo={this.state.userInfo} onUpdateApp={this.onUpdateApp} contents={this.state.contents} otherPlaces={this.state.otherPlaces} />}>\n                    </Route>\n                    <Route path='/map/community' exact render={(props) =>\n                        <Community {...props} userInfo={this.state.userInfo} followings={this.state.userInfo.followings} \n                        onUpdateApp={this.onUpdateApp} onGetOtherPlaces={this.onGetOtherPlaces} otherPlaces={this.state.otherPlaces} />}>\n                    </Route>\n                    <Route path='/map/profile' exact render={(props) =>\n                        <Profile {...props} userInfo={this.state.userInfo} onUpdateApp={this.onUpdateApp} />}>\n                    </Route>\n                    <Route path='/map' render={(props) => \n                        <div>\n                            <Navside {...props} avatar={this.state.userInfo.avatar} />\n                            <Map {...props} userInfo={this.state.userInfo} onUpdateApp={this.onUpdateApp} otherPlaces={this.state.otherPlaces} />\n                        </div>\n                        }>\n                    </Route>   \n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}